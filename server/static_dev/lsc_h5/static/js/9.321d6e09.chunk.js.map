{"version":3,"sources":["pages/mall/goods_types/index.tsx"],"names":["GoodsTypes","props","choseType","type","index","a","typeId","typeName","changeCommonData","formFields","history","goodsType","match","params","goodsCategory","push","Utils","addParams","getInitData","getGoodsCategories","goodsCategories","state","this","className","map","e","i","onClick","key","Item","length","filter","t","subclass","ele","idx","src","typeIco","medium","alt","WxConfig","onShare","title","nextProps","nextState","nextContext","React","Component","connect","commonReducer","dispatch","commonActions","bindActionCreators"],"mappings":"qWAsBMA,E,keAEF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAmCVC,UApCwB,uCAoCZ,WAAOC,EAAWC,GAAlB,2BAAAC,EAAA,6DACDC,EAAoBH,EAApBG,OAAQC,EAAYJ,EAAZI,SADP,EAEsE,EAAKN,MAA5EO,EAFC,EAEDA,iBAAkBC,EAFjB,EAEiBA,WAAYC,EAF7B,EAE6BA,QAA0BC,EAFvD,EAEsCC,MAAQC,OAASF,UAC/DF,EAAWK,cAAkBV,EAAQ,CAACK,EAAWK,cAAc,GAAIX,GAAQ,CAACA,GAC5EM,EAAWK,cAAX,YAA+BL,EAAWK,eAJlC,SAKFN,EAAiB,CAACC,WAAW,eAAKA,KALhC,OAMFL,GACFM,EAAQK,KAAK,qBAAuBC,IAAMC,UAAU,CAACN,EAAWL,EAAQC,KAPpE,2CApCY,0DAoDxBW,YApDwB,sBAoDV,oCAAAb,EAAA,8EACHH,EADG,EACHA,UAAmBiB,EADhB,EACQlB,MAAQkB,mBADhB,SAEsBA,IAFtB,uBAEHC,EAFG,EAEHA,gBAFG,SAGJlB,EAAUkB,EAAgB,GAAI,GAH1B,2CAjDV,EAAKC,MAAQ,GAHO,E,qDAMqJ,IAAD,EACxFC,KAAzErB,MAAQmB,EADyJ,EACzJA,gBADyJ,IACxIX,WAAaK,qBAD2H,MAC3G,GAD2G,EACrGZ,EAAaoB,KAAbpB,UACnE,OACI,uBAAMqB,UAAW,oBACb,yBAAKA,UAAW,SAERH,EAAgBI,KAAI,SAACC,EAAGC,GAAJ,OAChB,yBAAKC,QAAS,kBAAMzB,EAAUuB,EAAG,IAC5BF,UAAWE,EAAEnB,UAAYQ,EAAc,IAAM,IAAIR,OAAS,SAAW,GACrEsB,IAAKF,GAAID,EAAElB,cAI5B,sBAAMsB,KAAN,CAAWN,UAAW,eAEZH,EAAgBU,UAAYhB,EAAcgB,SAAWV,EAAgBW,QAAO,SAAAC,GAAC,OAC3EA,EAAE1B,SAAWQ,EAAc,GAAGR,UAAQ,IAAM,CAAC2B,SAAU,KAAKA,SAAST,KAAI,SAACU,EAAUC,GAAX,OACzE,yBAAKP,IAAKO,EAAKR,QAAS,kBAAMzB,EAAUgC,EAAK,IACxCX,UAAS,mBAAcY,EAAM,IAAM,EAAI,SAAW,KACnD,yBAAKC,IAAKF,EAAIG,QAAQC,OAAQC,IAAKL,EAAI3B,WACvC,6BAAM2B,EAAI3B,eAK1B,kBAAC,IAAD,S,0CAiBRiC,IAASC,QAAQ,CAACC,MAAO,iBACzBpB,KAAKJ,gB,4CASayB,EAA0BC,EAA0BC,GACtE,OAAO,M,GA7DUC,IAAMC,WAiFhBC,uBAhBf,SAAyB3B,GAAiB,IAAD,EACCA,EAAM4B,cAC5C,MAAO,CACH7B,gBAHiC,EAC9BA,gBAGHX,WAJiC,EACbA,eAO5B,SAA4ByC,GAAgB,IACjC/B,EAAwCgC,IAAxChC,mBAAoBX,EAAoB2C,IAApB3C,iBAC3B,OAAO,2BACA4C,6BAAmB,CAACjC,qBAAoBX,oBAAmB0C,IADlE,IAEIA,eAIOF,CAGbhD","file":"static/js/9.321d6e09.chunk.js","sourcesContent":["import React from 'react'\r\nimport {entries} from \"reducer\";\r\nimport {commonActions} from \"action\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Flex} from 'antd-mobile'\r\nimport {Utils, WxConfig} from 'utils'\r\n\r\nimport './index.scss'\r\nimport {BackHome} from \"components\";\r\n\r\nexport interface P {\r\n    goodsCategories: any[],\r\n    formFields: any,\r\n    dispatch: any,\r\n    getGoodsCategories: any,\r\n    changeCommonData: any,\r\n    history: any,\r\n    match: any\r\n}\r\n\r\n\r\nclass GoodsTypes extends React.Component<P> {\r\n    // 构造\r\n    constructor(props: any) {\r\n        super(props);\r\n        // 初始状态\r\n        this.state = {};\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const {props: {goodsCategories, formFields: {goodsCategory = []}}, choseType} = this\r\n        return (\r\n            <Flex className={'goods_types_page'}>\r\n                <div className={'types'}>\r\n                    {\r\n                        goodsCategories.map((e, i) => (\r\n                            <div onClick={() => choseType(e, 0)}\r\n                                 className={e.typeId === (goodsCategory[0] || {}).typeId ? 'active' : ''}\r\n                                 key={i}>{e.typeName}</div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Flex.Item className={'sub_types'}>\r\n                    {\r\n                        !!goodsCategories.length && !!goodsCategory.length && (goodsCategories.filter(t =>\r\n                            t.typeId === goodsCategory[0].typeId)[0] || {subclass: []}).subclass.map((ele: any, idx: number) => (\r\n                            <div key={idx} onClick={() => choseType(ele, 1)}\r\n                                 className={`sub_type ${idx % 3 === 1 ? 'center' : ''}`}>\r\n                                <img src={ele.typeIco.medium} alt={ele.typeName} />\r\n                                <div>{ele.typeName}</div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </Flex.Item>\r\n                <BackHome />\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    choseType = async (type: any, index: number) => {\r\n        const {typeId, typeName} = type\r\n        const {changeCommonData, formFields, history, match: {params: {goodsType}}} = this.props\r\n        formFields.goodsCategory = !!index ? [formFields.goodsCategory[0], type] : [type]\r\n        formFields.goodsCategory = [...formFields.goodsCategory]\r\n        await changeCommonData({formFields: {...formFields}})\r\n        if (!!index) {\r\n            history.push('/mall/search_goods' + Utils.addParams([goodsType, typeId, typeName]))\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        WxConfig.onShare({title: '分类'})\r\n        this.getInitData()\r\n    }\r\n\r\n    getInitData = async () => {\r\n        const {choseType, props: {getGoodsCategories}} = this\r\n        const {goodsCategories} = await getGoodsCategories()\r\n        await choseType(goodsCategories[0], 0)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>, nextContext: any): boolean {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: entries) {\r\n    const {goodsCategories, formFields} = state.commonReducer\r\n    return {\r\n        goodsCategories,\r\n        formFields\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    const {getGoodsCategories, changeCommonData} = commonActions\r\n    return {\r\n        ...bindActionCreators({getGoodsCategories, changeCommonData}, dispatch),\r\n        dispatch\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GoodsTypes)\r\n"],"sourceRoot":""}