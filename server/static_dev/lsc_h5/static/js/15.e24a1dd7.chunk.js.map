{"version":3,"sources":["pages/museums/collection_comments/index.tsx"],"names":["CollectionComments","props","getInit","a","match","params","id","changeCommonData","document","title","page","getList","getCollectionComments","state","this","collectionComments","className","direction","Item","onLoadData","list","nextProps","nextState","nextContext","React","Component","connect","museumReducer","commonReducer","dispatch","museumActions","commonActions","bindActionCreators"],"mappings":"yUAyBMA,E,keAEF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IA6BVC,QA9BwB,sBA8Bd,8BAAAC,EAAA,+DAC4C,EAAKF,MADjD,EACCG,MAAQC,OAASC,GAAMC,EADxB,EACwBA,iBAC9BC,SAASC,MAAQ,eAFX,SAGAF,EAAiB,CAACG,KAAM,IAHxB,uBAIA,EAAKC,UAJL,2CA9Bc,EAqCxBA,QArCwB,sBAqCd,kCAAAR,EAAA,+DACuD,EAAKF,MAA1CK,EADlB,EACCF,MAAQC,OAASC,GAAMI,EADxB,EACwBA,KAAME,EAD9B,EAC8BA,sBAD9B,SAEAA,EAAsB,CAACN,KAAII,SAF3B,2CAlCN,EAAKG,MAAQ,GAHO,E,qDAMqJ,IAAD,EAQpKC,KANAb,MAEIc,GAJgK,EAGhKC,UAHgK,EAIhKD,oBAJgK,YAQpKD,KAFAD,OANoK,IAOpKF,EACAG,KADAH,QAEJ,OACI,uBAAMK,UAAS,+BAAkCC,UAAW,UACxD,sBAAMC,KAAN,KACI,kBAAC,IAAD,CAAgBC,WAAYR,GACxB,kBAAC,IAAD,CAAwBS,KAAML,S,0CAQ9CD,KAAKZ,Y,4CAeamB,EAA0BC,EAA0BC,GACtE,OAAO,M,GA7CkBC,IAAMC,WAoExBC,uBAlBf,SAAyBb,GAGrB,MAAO,CAACE,mBAFqBF,EAAMc,cAA5BZ,mBAEqBL,KADbG,EAAMe,cAAdlB,SAIX,SAA4BmB,GAAgB,IACjCjB,EAAyBkB,IAAzBlB,sBACAL,EAAoBwB,IAApBxB,iBACP,OAAO,2BACAyB,6BAAmB,CAClBpB,wBACAL,oBACDsB,IAJP,IAKIA,eAIOH,CAA6C1B","file":"static/js/15.e24a1dd7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {entries} from 'reducer'\r\nimport {museumActions, commonActions} from 'action'\r\nimport {Flex} from 'antd-mobile'\r\nimport {\r\n    ScrollVertical,\r\n    CollectionComments as CollectionCommentLists\r\n} from 'components'\r\nimport './index.scss'\r\n\r\ninterface P {\r\n    className?: string,\r\n    history: any,\r\n    match: any,\r\n    page: number,\r\n    collectionComments: any[],\r\n    getCollectionComments: any,\r\n    changeCommonData: any\r\n}\r\n\r\ninterface S {\r\n}\r\n\r\nclass CollectionComments extends React.Component<P, S> {\r\n    // 构造\r\n    constructor(props: any) {\r\n        super(props);\r\n        // 初始状态\r\n        this.state = {};\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const {\r\n            props: {\r\n                className = '',\r\n                collectionComments\r\n            },\r\n            state: {},\r\n            getList\r\n        } = this\r\n        return (\r\n            <Flex className={`collection_comment_list_page`} direction={\"column\"}>\r\n                <Flex.Item>\r\n                    <ScrollVertical onLoadData={getList}>\r\n                        <CollectionCommentLists list={collectionComments} />\r\n                    </ScrollVertical>\r\n                </Flex.Item>\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getInit()\r\n    }\r\n\r\n    getInit = async () => {\r\n        const {match: {params: {id}}, changeCommonData} = this.props\r\n        document.title = '评价'\r\n        await changeCommonData({page: 1})\r\n        await this.getList()\r\n    }\r\n\r\n    getList = async () => {\r\n        const {match: {params: {id}}, page, getCollectionComments} = this.props\r\n        await getCollectionComments({id, page})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>, nextContext: any): boolean {\r\n        return true\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: entries) {\r\n    const {collectionComments} = state.museumReducer\r\n    const {page} = state.commonReducer\r\n    return {collectionComments, page}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    const {getCollectionComments} = museumActions\r\n    const {changeCommonData} = commonActions\r\n    return {\r\n        ...bindActionCreators({\r\n            getCollectionComments,\r\n            changeCommonData\r\n        }, dispatch),\r\n        dispatch\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionComments)\r\n"],"sourceRoot":""}