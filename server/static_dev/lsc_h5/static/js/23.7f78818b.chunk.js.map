{"version":3,"sources":["pages/museums/museum_list/index.tsx"],"names":["MuseumList","props","getInit","v","a","changeCommonData","changeMuseumData","formFields","by","match","params","data","page","content","museumList","getList","getMuseums","fail","state","this","className","direction","onChange","name","fieldType","placeholder","defaultValue","Item","onLoadData","list","nextProps","nextState","nextContext","React","Component","connect","commonReducer","museumReducer","dispatch","museumActions","commonActions","bindActionCreators"],"mappings":"wVA0BMA,E,keAEF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAoCVC,QArCwB,uCAqCd,WAAOC,GAAP,yBAAAC,EAAA,+DAC0E,EAAKH,MAA9EI,EADD,EACCA,iBAAkBC,EADnB,EACmBA,iBAAkBC,EADrC,EACqCA,WAA6BC,EADlE,EACiDC,MAAQC,OAASF,GACpEG,EAAY,CAACC,KAAM,GAClBT,IACDI,EAAWM,QAAU,GACrBF,EAAKJ,WAAL,eAAsBA,IALpB,SAOAF,EAAiBM,GAPjB,uBAQAL,EAAiB,CAACQ,WAAY,KAR9B,UASK,cAAPN,IAAwBL,EATtB,kCAUI,EAAKY,UAVT,4CArCc,wDAmDxBA,QAnDwB,uCAmDd,WAAOZ,GAAP,uBAAAC,EAAA,2DACmE,EAAKH,MAAvEe,EADD,EACCA,WAAyBH,EAD1B,EACaN,WAAaM,QAAUD,EADpC,EACoCA,KAC/B,YADsDJ,EAD3D,EAC0CC,MAAQC,OAASF,KACzCK,EAFlB,uBAGF,IAAMI,KAAK,qDAHT,0CAMAD,EAAW,CAACH,UAASD,QAAOJ,GAN5B,2CAnDc,sDAGpB,EAAKU,MAAQ,GAHO,E,qDAMqJ,IAAD,EAUpKC,KARAlB,MAEIa,GAJgK,EAGhKM,UAHgK,EAIhKN,YACiBN,EAL+I,EAKhKC,MAAQC,OAASF,GAL+I,YAUpKW,KAHAD,OAPoK,IAQpKhB,EAEAiB,KAFAjB,QACAa,EACAI,KADAJ,QAEJ,OACI,uBAAMK,UAAS,mBAAsBC,UAAW,UAEjC,WAAPb,GACA,kBAAC,IAAD,CAAWc,SAAUpB,EAASqB,KAAM,UAAWC,UAAW,SAAUC,YAAY,mDACrEC,aAAc,KAE7B,sBAAMC,KAAN,KACI,kBAAC,IAAD,CAAgBC,WAAYb,GACxB,kBAAC,IAAD,CAAgBc,KAAMf,S,0CAQtCK,KAAKjB,Y,4CA0Ba4B,EAA0BC,EAA0BC,GACtE,OAAO,M,GA/DUC,IAAMC,WAwFhBC,uBArBf,SAAyBjB,GAAiB,IAAD,EACVA,EAAMkB,cAA1B7B,EAD8B,EAC9BA,WAAYK,EADkB,EAClBA,KAEnB,MAAO,CACHE,WAFiBI,EAAMmB,cAApBvB,WAESP,aAAYK,WAIhC,SAA4B0B,GAAgB,IACjCtB,EAAgCuB,IAAhCvB,WAAYV,EAAoBiC,IAApBjC,iBACZD,EAAoBmC,IAApBnC,iBACP,OAAO,2BACAoC,6BAAmB,CAClBzB,aACAX,mBACAC,oBACDgC,IALP,IAMIA,eAIOH,CAGbnC","file":"static/js/23.7f78818b.chunk.js","sourcesContent":["import React from 'react'\r\nimport {VsonField, MuseumList as MuseumListBody, ScrollVertical} from 'components'\r\nimport {Flex} from 'antd-mobile'\r\nimport {entries} from \"reducer\";\r\nimport {Toast} from 'antd-mobile'\r\nimport {commonActions, museumActions} from \"action\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport './index.scss'\r\nimport {WxConfig} from \"utils\";\r\n\r\ninterface P {\r\n    className?: string,\r\n    getMuseums: any,\r\n    changeMuseumData: any,\r\n    changeCommonData: any,\r\n    museumList: any[],\r\n    formFields: any,\r\n    page: number,\r\n    match: any\r\n}\r\n\r\ninterface S {\r\n}\r\n\r\n\r\nclass MuseumList extends React.Component<P, S> {\r\n    // 构造\r\n    constructor(props: any) {\r\n        super(props);\r\n        // 初始状态\r\n        this.state = {};\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const {\r\n            props: {\r\n                className = '',\r\n                museumList,\r\n                match: {params: {by}}\r\n            },\r\n            state: {},\r\n            getInit,\r\n            getList\r\n        } = this\r\n        return (\r\n            <Flex className={`museum_list_page`} direction={\"column\"}>\r\n                {\r\n                    by === 'search' &&\r\n                    <VsonField onChange={getInit} name={'content'} fieldType={'search'} placeholder='请输入博物馆名称'\r\n                               defaultValue={''} />\r\n                }\r\n                <Flex.Item>\r\n                    <ScrollVertical onLoadData={getList}>\r\n                        <MuseumListBody list={museumList} />\r\n                    </ScrollVertical>\r\n                </Flex.Item>\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getInit()\r\n    }\r\n\r\n    getInit = async (v?: string) => {\r\n        const {changeCommonData, changeMuseumData, formFields, match: {params: {by}}} = this.props\r\n        let data: any = {page: 1}\r\n        if (!v) {\r\n            formFields.content = ''\r\n            data.formFields = {...formFields}\r\n        }\r\n        await changeCommonData(data)\r\n        await changeMuseumData({museumList: []})\r\n        if (by === 'attention' || !!v) {\r\n            await this.getList()\r\n        }\r\n    }\r\n\r\n    getList = async (v?: string) => {\r\n        const {getMuseums, formFields: {content}, page, match: {params: {by}}} = this.props\r\n        if (by === 'search' && !content) {\r\n            Toast.fail('搜索内容不能为空!')\r\n            return\r\n        }\r\n        await getMuseums({content, page}, by)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>, nextContext: any): boolean {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: entries) {\r\n    const {formFields, page} = state.commonReducer\r\n    const {museumList} = state.museumReducer\r\n    return {\r\n        museumList, formFields, page\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    const {getMuseums, changeMuseumData} = museumActions\r\n    const {changeCommonData} = commonActions\r\n    return {\r\n        ...bindActionCreators({\r\n            getMuseums,\r\n            changeCommonData,\r\n            changeMuseumData\r\n        }, dispatch),\r\n        dispatch\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MuseumList)\r\n"],"sourceRoot":""}