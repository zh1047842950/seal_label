{"version":3,"sources":["pages/museums/museum_subtypes/index.tsx"],"names":["MuseumSubTypes","props","onDelete","event","a","stopPropagation","museumSubTypes","delMuseumSubType","ids","map","e","checked","push","stairTwoId","join","isOk","success","getInit","chose","index","changeMuseumData","bool","choseAll","navTo","id","edit","state","history","match","params","isMyself","typeId","museumId","pathname","toggle","key","val","setState","getList","page","getMuseumSubTypes","changeCommonData","name","document","title","this","className","direction","Item","onLoadData","i","onClick","src","alt","img","medium","describe","totalObject","length","to","nextProps","nextState","nextContext","React","Component","connect","museumReducer","commonReducer","dispatch","museumActions","commonActions","bindActionCreators"],"mappings":"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","file":"static/js/25.0e2ae54c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.scss'\r\nimport {entries} from \"reducer\";\r\nimport {museumActions, commonActions} from \"action\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Flex, Toast} from 'antd-mobile'\r\nimport {ScrollVertical, AllowRight, EmptyData} from 'components'\r\nimport {Link} from 'react-router-dom'\r\n\r\ninterface P {\r\n    className?: string,\r\n    match: any,\r\n    history: any,\r\n    changeMuseumData: any,\r\n    getMuseumSubTypes: any,\r\n    delMuseumSubType: any,\r\n    changeCommonData: any,\r\n    page: number,\r\n    museumSubTypes: any[]\r\n}\r\n\r\ninterface S {\r\n    edit: boolean\r\n}\r\n\r\nclass MuseumSubTypes extends React.Component<P, S> {\r\n    // 构造\r\n    constructor(props: any) {\r\n        super(props);\r\n        // 初始状态\r\n        this.state = {\r\n            edit: false\r\n        };\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const {\r\n            props: {\r\n                className = '',\r\n                museumSubTypes,\r\n                match: {params: {id, museumId, isMyself}}\r\n            },\r\n            state: {\r\n                edit\r\n            },\r\n            toggle,\r\n            navTo,\r\n            choseAll,\r\n            chose,\r\n            onDelete,\r\n            getList\r\n        } = this\r\n        return (\r\n            <Flex className={`museum_subtypes_page`} direction={\"column\"}>\r\n                <Flex.Item>\r\n                    <ScrollVertical onLoadData={getList}>\r\n                        {\r\n                            museumSubTypes.map((e: any, i: number) => <Flex className={'type'} key={i}\r\n                                                                            onClick={() => navTo(e.stairTwoId)}>\r\n                                {\r\n                                    edit && <img className={'checkbox_img'} onClick={(event) => chose(event, i)}\r\n                                                 src={e.checked ? '/lsc_h5_hash/imgs/chose1.png' : '/lsc_h5_hash/imgs/chose2.png'} alt=\"\" />\r\n                                }\r\n                                <Flex.Item>\r\n                                    {e.img && e.img.medium && < img className={'logo'} src={e.img.medium} alt=\"\" />}\r\n                                    <div className={'infos'}>\r\n                                        <div className={'name'}>{e.name}</div>\r\n                                        <Flex className={'describe'}>\r\n                                            <Flex.Item className={'multi_line'}>{e.describe}</Flex.Item>\r\n                                            {isMyself === 'true' && <span>新增藏品</span>}\r\n                                        </Flex>\r\n                                        <AllowRight>\r\n                                            <Flex.Item>馆藏：<span>{e.totalObject}</span> 件</Flex.Item>\r\n                                            <span>地图导航</span>\r\n                                        </AllowRight>\r\n                                    </div>\r\n                                </Flex.Item>\r\n                            </Flex>)\r\n                        }\r\n                        {\r\n                            !museumSubTypes.length && <EmptyData />\r\n                        }\r\n                    </ScrollVertical>\r\n                </Flex.Item>\r\n                {\r\n                    isMyself === 'true' && <Flex className={`oprs`}>\r\n                        {\r\n                            edit && <Flex.Item>\r\n                              <span onClick={() => choseAll(true)}>全选</span>\r\n                              <span onClick={() => choseAll(false)}>全不选</span>\r\n                              <span onClick={() => toggle('edit')}>取消</span>\r\n                              <span onClick={onDelete}>删除</span>\r\n                            </Flex.Item>\r\n                        }\r\n                      <img onClick={() => toggle('edit')} src=\"/lsc_h5_hash/imgs/edit.png\" alt=\"\" />\r\n                      <Link to={'/museums/museum_subtype_edit/' + id + '/' + museumId}>\r\n                        <img src=\"/lsc_h5_hash/imgs/add1.png\" alt=\"\" />\r\n                      </Link>\r\n                    </Flex>\r\n                }\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    onDelete = async (event: any) => {\r\n        event.stopPropagation()\r\n        const {museumSubTypes, delMuseumSubType} = this.props\r\n        let ids: any[] = []\r\n        museumSubTypes.map(e => {\r\n            if (e.checked) {\r\n                ids.push(e.stairTwoId)\r\n            }\r\n        })\r\n        const {isOk} = await delMuseumSubType(ids.join('&'))\r\n        if (isOk) {\r\n            Toast.success('类目删除成功!')\r\n            await this.getInit()\r\n        }\r\n    }\r\n\r\n    chose = async (event: any, index: number) => {\r\n        event.stopPropagation()\r\n        const {changeMuseumData, museumSubTypes} = this.props\r\n        const bool: boolean = museumSubTypes[index].checked\r\n        museumSubTypes[index].checked = !bool\r\n        await changeMuseumData({museumSubTypes: [...museumSubTypes]})\r\n    }\r\n\r\n    choseAll = async (bool: boolean) => {\r\n        const {changeMuseumData, museumSubTypes} = this.props\r\n        museumSubTypes.map(e => {\r\n            e.checked = bool\r\n            return e\r\n        })\r\n        await changeMuseumData({museumSubTypes: [...museumSubTypes]})\r\n    }\r\n\r\n    navTo = async (id: string) => {\r\n        const {edit} = this.state\r\n        const {history, match: {params: {isMyself, id: typeId, museumId}}} = this.props\r\n        history.push({\r\n            pathname: edit ? '/museums/museum_subtype_edit/' + id : '/museums/collection_list/subtype/' + id + '/' + isMyself+ '/' + typeId+ '/' + museumId\r\n        })\r\n    }\r\n\r\n    toggle = async (key: string) => {\r\n        // @ts-ignore\r\n        const val: boolean = this.state[key]\r\n        // @ts-ignore\r\n        this.setState({[key]: !val})\r\n    }\r\n\r\n\r\n    getList = async () => {\r\n        const {page, getMuseumSubTypes, match: {params: {id}}} = this.props\r\n        await getMuseumSubTypes({id, page})\r\n    }\r\n\r\n    getInit = async () => {\r\n        const {changeCommonData,match: {params: {name}}} = this.props\r\n        await changeCommonData({page: 1})\r\n        document.title = name\r\n        await this.getList()\r\n    }\r\n\r\n\r\n    componentDidMount(): void {\r\n        document.title = '二级类目'\r\n        this.getInit()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>, nextContext: any): boolean {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: entries) {\r\n    const {museumSubTypes} = state.museumReducer\r\n    const {page} = state.commonReducer\r\n    return {\r\n        museumSubTypes, page\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    const {getMuseumSubTypes, delMuseumSubType, changeMuseumData} = museumActions\r\n    const {changeCommonData} = commonActions\r\n    return {\r\n        ...bindActionCreators({getMuseumSubTypes, delMuseumSubType, changeMuseumData, changeCommonData}, dispatch),\r\n        dispatch\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MuseumSubTypes)\r\n"],"sourceRoot":""}