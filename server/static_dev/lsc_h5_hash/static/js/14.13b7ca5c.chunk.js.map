{"version":3,"sources":["pages/museums/ads_info_list/index.tsx"],"names":["AdsInfoList","props","getInit","a","changeCommonData","changeMuseumData","page","getMuseumDetail","match","params","by","id","getList","totalPage","adsInfoList","name","WxConfig","setWxTitle","type","formFields","getAdsInfos","url","data","museumId","state","this","className","adsInfoTypes","direction","align","activeColor","options","onChange","Item","onLoadData","map","e","i","to","key","showTime","zh","src","coverImg","big","title","length","nextProps","nextState","nextContext","React","Component","connect","commonReducer","museumReducer","museum","dispatch","museumActions","commonActions","bindActionCreators"],"mappings":"oXA6BMA,E,keAEF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IA0CVC,QA3CwB,sBA2Cd,gDAAAC,EAAA,8EACCF,MAAQG,EADT,EACSA,iBAAkBC,EAD3B,EAC2BA,iBAAkBC,EAD7C,EAC6CA,KAAMC,EADnD,EACmDA,gBADnD,IACoEC,MAAQC,OAD5E,EACqFC,GAAIC,EADzF,EACyFA,GAAOC,EADhG,EACgGA,QACzF,IAATN,EAFE,gCAGIF,EAAiB,CAACE,KAAM,EAAGO,UAAW,IAH1C,uBAKAR,EAAiB,CAACS,YAAa,KAL/B,uBAMeP,EAAgBI,GAN/B,uBAMCI,EAND,EAMCA,KAND,UAOAC,IAASC,WAAWF,GAPpB,yBAQAH,IARA,4CA3Cc,EAsDxBA,QAtDwB,sBAsDd,oCAAAT,EAAA,+DACiE,EAAKF,MAApDU,EADlB,EACCH,MAAQC,OAASE,GAAmBO,EADrC,EACwBC,WAAaD,KAAOZ,EAD5C,EAC4CA,KAAMc,EADlD,EACkDA,YADlD,SAEAA,EAAY,CACdC,IAAK,oBACLC,KAAM,CACFC,SAAUZ,EACVL,OACAY,UAPF,2CAnDN,EAAKM,MAAQ,GAHO,E,qDAMqJ,IAAD,EAUpKC,KARAxB,MAEIa,GAJgK,EAGhKY,UAHgK,EAIhKZ,aACAa,EALgK,EAKhKA,aALgK,YAUpKF,KAHAD,OAPoK,IAQpKtB,EAEAuB,KAFAvB,QACAU,EACAa,KADAb,QAEJ,OACI,uBAAMgB,UAAW,SAAUC,MAAO,QAASH,UAAS,sBAChD,kBAAC,IAAD,CAAUX,KAAM,OAAQe,YAAa,UAAWC,QAASJ,EAAcK,SAAU9B,IACjF,sBAAM+B,KAAN,KACI,kBAAC,IAAD,CAAgBC,WAAYtB,GACxB,yBAAKc,UAAS,QAENZ,EAAYqB,KAAI,SAACC,EAAQC,GAAT,OAAuB,kBAAC,IAAD,CACnCC,GAAI,4BAA8BF,EAAEzB,GAAI4B,IAAKF,EAAGX,UAAW,YAC3D,yBAAKA,UAAW,QACZ,8BAAOU,EAAEI,SAASC,KAEtB,yBAAKC,IAAKN,EAAEO,SAASC,MACrB,yBAAKlB,UAAW,SAAUU,EAAES,YAIlC/B,EAAYgC,QAAU,kBAAC,IAAD,Y,0CAiC5CrB,KAAKvB,Y,4CAGa6C,EAA0BC,EAA0BC,GACtE,OAAO,M,GAzEWC,IAAMC,WAmGjBC,uBAtBf,SAAyB5B,GAAiB,IAAD,EACIA,EAAM6B,cAAxClC,EAD8B,EAC9BA,WAAYb,EADkB,EAClBA,KAAMqB,EADY,EACZA,aADY,EAEPH,EAAM8B,cACpC,MAAO,CACHnC,aAAYb,OAAMqB,eAAcb,YAJC,EAE9BA,YAE0CyC,OAJZ,EAEjBA,WAMxB,SAA4BC,GAAgB,IACjCpC,EAAkDqC,IAAlDrC,YAAab,EAAqCkD,IAArClD,gBAAiBF,EAAoBoD,IAApBpD,iBAC9BD,EAAoBsD,IAApBtD,iBACP,OAAO,2BACAuD,6BAAmB,CAClBvD,mBACAG,kBACAF,mBACAe,eACDoC,IANP,IAOIA,eAIOJ,CAGbpD","file":"static/js/14.13b7ca5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {entries} from \"reducer\";\r\nimport {museumActions, commonActions} from \"action\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Flex} from 'antd-mobile'\r\nimport {VsonTabs, ScrollVertical, EmptyData} from 'components'\r\nimport {Link} from \"react-router-dom\";\r\nimport {WxConfig} from \"utils\";\r\nimport './index.scss'\r\n\r\ninterface P {\r\n    className?: string,\r\n    match: any,\r\n    history: any,\r\n    getAdsInfos: any,\r\n    getMuseumDetail: any,\r\n    changeCommonData: any,\r\n    changeMuseumData: any,\r\n    adsInfoList: any[],\r\n    museum: any,\r\n    formFields: any,\r\n    page: number,\r\n    adsInfoTypes: any[]\r\n}\r\n\r\ninterface S {\r\n}\r\n\r\nclass AdsInfoList extends React.Component<P, S> {\r\n    // 构造\r\n    constructor(props: any) {\r\n        super(props);\r\n        // 初始状态\r\n        this.state = {};\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const {\r\n            props: {\r\n                className = '',\r\n                adsInfoList,\r\n                adsInfoTypes\r\n            },\r\n            state: {},\r\n            getInit,\r\n            getList\r\n        } = this\r\n        return (\r\n            <Flex direction={\"column\"} align={\"start\"} className={`ads_info_list_page`}>\r\n                <VsonTabs name={'type'} activeColor={'#6499AE'} options={adsInfoTypes} onChange={getInit} />\r\n                <Flex.Item>\r\n                    <ScrollVertical onLoadData={getList}>\r\n                        <div className={`list`}>\r\n                            {\r\n                                adsInfoList.map((e: any, i: number) => <Link\r\n                                    to={'/museums/ads_info_detail/' + e.id} key={i} className={'ads_info'}>\r\n                                    <div className={'time'}>\r\n                                        <span>{e.showTime.zh}</span>\r\n                                    </div>\r\n                                    <img src={e.coverImg.big} />\r\n                                    <div className={'title'}>{e.title}</div>\r\n                                </Link>)\r\n\r\n                            }\r\n                            {!adsInfoList.length && <EmptyData />}\r\n                        </div>\r\n                    </ScrollVertical>\r\n                </Flex.Item>\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n\r\n    getInit = async () => {\r\n        const {props: {changeCommonData, changeMuseumData, page, getMuseumDetail, match: {params: {by, id}}}, getList} = this\r\n        if (page !== 1) {\r\n            await changeCommonData({page: 1, totalPage: 0})\r\n        }\r\n        await changeMuseumData({adsInfoList: []})\r\n        const {name} = await getMuseumDetail(id)\r\n        await WxConfig.setWxTitle(name)\r\n        await getList()\r\n    }\r\n\r\n    getList = async () => {\r\n        const {match: {params: {id}}, formFields: {type}, page, getAdsInfos} = this.props\r\n        await getAdsInfos({\r\n            url: '/queryInformation',\r\n            data: {\r\n                museumId: id,\r\n                page,\r\n                type\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getInit()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>, nextContext: any): boolean {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: entries) {\r\n    const {formFields, page, adsInfoTypes} = state.commonReducer\r\n    const {adsInfoList, museum} = state.museumReducer\r\n    return {\r\n        formFields, page, adsInfoTypes, adsInfoList, museum\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    const {getAdsInfos, getMuseumDetail, changeMuseumData} = museumActions\r\n    const {changeCommonData} = commonActions\r\n    return {\r\n        ...bindActionCreators({\r\n            changeCommonData,\r\n            getMuseumDetail,\r\n            changeMuseumData,\r\n            getAdsInfos\r\n        }, dispatch),\r\n        dispatch\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AdsInfoList)\r\n"],"sourceRoot":""}