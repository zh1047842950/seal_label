{"version":3,"sources":["pages/mall/auction_goods_detail/index.tsx"],"names":["tabs","value","text","refreshOpts","type","mallTypes","changeMallData","payload","goods","goodsList","storeInfo","AuctionGoodsDetail","props","getInitData","newId","a","getAuctionScenes","getGoodsDetail","shopId","match","params","shopName","document","title","onTopTabChange","o","topTab","setState","state","this","auctionStatus","auctionScenes","direction","className","options","name","onChange","src","alt","onClick","Dialog","showDownloadModal","Item","shopPriImg","id","shopCode","parseInt","isFavorite","label","auctionDiscountTime","readNum","shopPrice","markUp","cashDeposit","reservePrice","offerNum","currentPrice","store","storeId","length","user","headImg","medium","map","e","i","key","nickName","showTime","zh","auto","hasBottom","nextProps","nextState","nextContext","React","Component","connect","mallReducer","commonReducer","dispatch","mallActions","bindActionCreators"],"mappings":"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","file":"static/js/7.660ea0d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {entries} from \"reducer\";\r\nimport {mallActions, mallTypes} from \"action\";\r\nimport {\r\n    VsonTabs,\r\n    VsonField,\r\n    ScrollVertical,\r\n    VsonBanner,\r\n    CollectionGoods,\r\n    StoreTop,\r\n    AuctionProcess,\r\n    StoreGoods,\r\n    GoodsDetail,\r\n    BackHome\r\n} from 'components'\r\nimport {Dialog} from 'utils'\r\nimport {Flex} from 'antd-mobile'\r\nimport './index.scss'\r\n\r\nexport interface P {\r\n    getGoodsDetail: any,\r\n    getAuctionScenes: any,\r\n    storeInfo: any,\r\n    goods: any,\r\n    match: any,\r\n    auctionStatus: any[],\r\n    auctionScenes: any[],\r\n    topTab: number\r\n}\r\n\r\nconst tabs = [\r\n    {\r\n        value: 1,\r\n        text: '拍卖详情'\r\n    },\r\n    {\r\n        value: 2,\r\n        text: '拍卖现场'\r\n    }\r\n]\r\n\r\nconst refreshOpts = [\r\n    {\r\n        type: mallTypes.changeMallData,\r\n        payload: {\r\n            goods: {},\r\n            goodsList: [],\r\n            storeInfo: {}\r\n        }\r\n    }\r\n]\r\n\r\nexport interface S {\r\n    topTab: number\r\n}\r\n\r\nclass AuctionGoodsDetail extends React.Component<P, S> {\r\n    // 构造\r\n    constructor(props: any) {\r\n        super(props);\r\n        // 初始状态\r\n        this.state = {\r\n            topTab: 0\r\n        };\r\n    }\r\n\r\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const {\r\n            props: {goods, auctionStatus, storeInfo, auctionScenes},\r\n            state: {topTab},\r\n            onTopTabChange\r\n        } = this\r\n        return (\r\n            <Flex direction={'column'} className={'auction_goods_detail'}>\r\n                <div className={'top_tab'}>\r\n                    <VsonTabs options={tabs} name={'topTab'} onChange={onTopTabChange}>\r\n                    </VsonTabs>\r\n                    {/*<Link to={''}>*/}\r\n                    <img className={'msg_center'} src=\"/lsc_h5_hash/imgs/msg_0.png\" alt=\"\" onClick={Dialog.showDownloadModal} />\r\n                    {/*</Link>*/}\r\n                </div>\r\n                <Flex.Item className={'contents'}>\r\n                    <ScrollVertical className={'goods_detail'} refreshOpts={refreshOpts}>\r\n                        <VsonBanner options={goods.shopPriImg} />\r\n                        <Flex className={'title item padding_lr'}>\r\n                            <Flex.Item>{goods.shopName}</Flex.Item>\r\n                            <CollectionGoods id={goods.shopCode} type={1} state={parseInt(goods.isFavorite)} />\r\n                        </Flex>\r\n                        <Flex className={'padding_lr auction_status'}>\r\n                                <span\r\n                                    className={`state${goods.auctionStatus}`}>{auctionStatus[parseInt(goods.auctionStatus) || 2].label}</span>\r\n                            <Flex.Item>{goods.auctionDiscountTime}</Flex.Item>\r\n                            <div>{goods.readNum}人围观</div>\r\n                        </Flex>\r\n                        <div className={'price_num'}>\r\n                            <Flex className={'padding_lr item'}>\r\n                                <Flex.Item>起拍价:￥{goods.shopPrice}</Flex.Item>\r\n                                <Flex.Item>加价幅度:￥{goods.markUp}</Flex.Item>\r\n                                <Flex.Item>消保金:￥{goods.cashDeposit}</Flex.Item>\r\n                            </Flex>\r\n                            <Flex className={'padding_lr item'}>\r\n                                <Flex.Item>一口价:￥{goods.reservePrice}</Flex.Item>\r\n                                <Flex.Item>出价次数:￥{goods.offerNum}</Flex.Item>\r\n                                <Flex.Item\r\n                                    className={'price1'}>当前价:￥{goods.currentPrice}</Flex.Item>\r\n                            </Flex>\r\n                        </div>\r\n                        <StoreTop store={storeInfo} className={'margin_ud'} />\r\n                        <AuctionProcess className={'margin_d'} />\r\n                        <GoodsDetail goods={goods} className={'margin_ud'} type={1} />\r\n                        <StoreGoods id={goods.storeId} />\r\n                    </ScrollVertical>\r\n                    <Flex direction={\"column\"} className={`auction_scenes scenes${topTab}`}>\r\n                        {\r\n                            !!auctionScenes.length && <Flex className={'leader'}>\r\n                              <img src={auctionScenes[0].user.headImg.medium} alt=\"\" />\r\n                              <Flex.Item className={'padding_lr'}>\r\n                                <div>***</div>\r\n                                <span className={'state6'}>领先</span>\r\n                              </Flex.Item>\r\n                              <Flex.Item className={'current'}>\r\n                                <div>当前价</div>\r\n                                <span className={'price2'}>￥{auctionScenes[0].currentPrice}</span>\r\n                              </Flex.Item>\r\n                            </Flex>\r\n                        }\r\n                        <Flex.Item className={'list'}>\r\n                            {\r\n                                auctionScenes.map((e, i) =>\r\n                                    <Flex className={'padding scenes'} key={i}>\r\n                                        <img src={auctionScenes[0].user.headImg.medium} alt=\"\" />\r\n                                        <Flex.Item className={'padding_lr'}>\r\n                                            <div>\r\n                                                {e.user.nickName}\r\n                                                <span>{e.showTime.zh}</span>\r\n                                            </div>\r\n                                            <span className={'state5'}>出价：{e.currentPrice}元</span>\r\n                                        </Flex.Item>\r\n                                    </Flex>\r\n                                )\r\n                            }\r\n                            {\r\n                                !auctionScenes.length && <div className={'no_auction'}>暂无出价</div>\r\n                            }\r\n                        </Flex.Item>\r\n                    </Flex>\r\n                </Flex.Item>\r\n                <Flex className={'offer_opr'}>\r\n                    <Flex.Item className={'bd_u'}>\r\n                        <VsonField auto={true} name={'price'} className={'bd_u'} />\r\n                    </Flex.Item>\r\n                    <img src=\"/lsc_h5_hash/imgs/shoppaimai_add.png\" alt=\"\" onClick={Dialog.showDownloadModal} />\r\n                    <div className={'do_offer state5'} onClick={Dialog.showDownloadModal}>立即出价</div>\r\n                </Flex>\r\n                <BackHome hasBottom={true} />\r\n            </Flex>\r\n        );\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        document.title = '拍卖详情'\r\n        this.getInitData()\r\n    }\r\n\r\n    getInitData = async (newId?: string) => {\r\n        const {getAuctionScenes, getGoodsDetail, match: {params: {shopId}}} = this.props\r\n        const {shopName} = await getGoodsDetail(newId || shopId, 1, !!newId)\r\n        await getAuctionScenes(shopId)\r\n        document.title = shopName\r\n    }\r\n\r\n    onTopTabChange = async (o: any, topTab: number) => {\r\n        this.setState({\r\n            topTab: topTab + 1\r\n        })\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<any>, nextState: Readonly<any>, nextContext: any): boolean {\r\n        return true\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Readonly<P>, nextContext: any): void {\r\n        const {match: {params: {shopId: newId}}} = nextProps\r\n        const {match: {params: {shopId}}} = this.props\r\n        if (newId !== shopId) {\r\n            this.getInitData(newId)\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: entries) {\r\n    const {goods, auctionScenes} = state.mallReducer\r\n    const {auctionStatus, storeInfo} = state.commonReducer\r\n    return {\r\n        auctionScenes,\r\n        goods,\r\n        auctionStatus,\r\n        storeInfo\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    const {getGoodsDetail, getAuctionScenes} = mallActions\r\n    return {\r\n        ...bindActionCreators({\r\n            getGoodsDetail,\r\n            getAuctionScenes\r\n        }, dispatch),\r\n        dispatch\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(AuctionGoodsDetail)\r\n"],"sourceRoot":""}